// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace SchulDbGenerator.Model
{
    public partial class SchuleContext : DbContext
    {
        public SchuleContext()
        {
        }

        public SchuleContext(DbContextOptions<SchuleContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Abteilung> Abteilungens { get; set; }
        public virtual DbSet<Gegenstand> Gegenstaendes { get; set; }
        public virtual DbSet<Geschlecht> Geschlechters { get; set; }
        public virtual DbSet<Klasse> Klassens { get; set; }
        public virtual DbSet<Lehrer> Lehrers { get; set; }
        public virtual DbSet<Pruefung> Pruefungens { get; set; }
        public virtual DbSet<Raum> Raeumes { get; set; }
        public virtual DbSet<Religion> Religionens { get; set; }
        public virtual DbSet<Schueler> Schuelers { get; set; }
        public virtual DbSet<Schuljahr> Schuljahres { get; set; }
        public virtual DbSet<Staat> Staatens { get; set; }
        public virtual DbSet<Stunde> Stundens { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
                throw new SchulDbException("Die Datenbankverbindung nicht nicht konfiguriert.");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Pruefung>(entity =>
            {
                entity.HasKey(e => new { e.PDatumZeit, e.PPruefer, e.PGegenstand });
            });

            modelBuilder.Entity<Stunde>(entity =>
            {
                entity.HasKey(e => new { e.StStunde, e.StTag, e.StLehrer });
            });

            //    modelBuilder.Entity<Abteilungen>(entity =>
            //    {
            //        entity.HasKey(e => e.AbtId)
            //            .HasName("pk_Abteilungen");

            //        entity.HasIndex(e => e.AbtLeiter)
            //            .HasName("lehrerAbteilungen");

            //        entity.Property(e => e.AbtId).ValueGeneratedNever();

            //        entity.HasOne(d => d.AbtLeiterNavigation)
            //            .WithMany(p => p.Abteilungens)
            //            .HasForeignKey(d => d.AbtLeiter)
            //            .HasConstraintName("lehrerAbteilungen");
            //    });

            //    modelBuilder.Entity<Gegenstaende>(entity =>
            //    {
            //        entity.HasKey(e => e.GNr)
            //            .HasName("pk_Gegenstaende");

            //        entity.Property(e => e.GNr).HasComment("Nummer (mit Buchstaben) des Gegenstands");

            //        entity.Property(e => e.GBez).HasComment("Bezeichnung des Gegenstands");
            //    });

            //    modelBuilder.Entity<Geschlechter>(entity =>
            //    {
            //        entity.HasKey(e => e.GesId)
            //            .HasName("pk_Geschlechter");

            //        entity.Property(e => e.GesId).ValueGeneratedNever();
            //    });

            //    modelBuilder.Entity<Klassen>(entity =>
            //    {
            //        entity.HasKey(e => e.KId)
            //            .HasName("pk_Klassen");

            //        entity.HasIndex(e => e.KAbteilung)
            //            .HasName("Abteilungenklassen");

            //        entity.HasIndex(e => e.KKlaspr)
            //            .HasName("schuelerklassen1");

            //        entity.HasIndex(e => e.KKlasprstv)
            //            .HasName("Schuelerklassen");

            //        entity.HasIndex(e => e.KVorstand)
            //            .HasName("lehrerklassen");

            //        entity.Property(e => e.KId).HasComment("Klassennummern (auch Buchstaben), die in der Schule üblich sind");

            //        entity.Property(e => e.KAbteilung).HasComment("Abteilung, die der Klasse zugeordnet ist.");

            //        entity.Property(e => e.KBez).HasComment("übliche Benennung der Klasse");

            //        entity.Property(e => e.KDatumbis).HasComment("Datum, bis zu der die Klasse geführt wird (bei Semesterformen und Abschlussklassen)");

            //        entity.Property(e => e.KDatumvon).HasComment("Datum, ab der die Klasse geführt wird (bei Semesterformen)");

            //        entity.Property(e => e.KJahrsem).HasComment("Schuljahr (20190 = 2019/20, 20191 = WS 2019/20, 20192 = SS 2019/20)");

            //        entity.Property(e => e.KKlaspr).HasComment("Schülernummer des Klassensprechers (FS)");

            //        entity.Property(e => e.KKlasprstv).HasComment("Schülernummer des Klassensprecherstellvertreters (FS)");

            //        entity.Property(e => e.KVorstand).HasComment("Lehrernummer des Klassenvorstands der Klasse (FS)");

            //        entity.HasOne(d => d.KAbteilungNavigation)
            //            .WithMany(p => p.Klassens)
            //            .HasForeignKey(d => d.KAbteilung)
            //            .OnDelete(DeleteBehavior.ClientSetNull)
            //            .HasConstraintName("Abteilungenklassen");

            //        entity.HasOne(d => d.KKlasprNavigation)
            //            .WithMany(p => p.KlassenKKlasprNavigations)
            //            .HasForeignKey(d => d.KKlaspr)
            //            .HasConstraintName("schuelerklassen1");

            //        entity.HasOne(d => d.KKlasprstvNavigation)
            //            .WithMany(p => p.KlassenKKlasprstvNavigations)
            //            .HasForeignKey(d => d.KKlasprstv)
            //            .HasConstraintName("Schuelerklassen");

            //        entity.HasOne(d => d.KVorstandNavigation)
            //            .WithMany(p => p.Klassens)
            //            .HasForeignKey(d => d.KVorstand)
            //            .HasConstraintName("lehrerklassen");
            //    });

            //    modelBuilder.Entity<Lehrer>(entity =>
            //    {
            //        entity.HasKey(e => e.LId)
            //            .HasName("pk_Lehrer");

            //        entity.HasComment("Lehrer der Schule");

            //        entity.HasIndex(e => e.LChef)
            //            .HasName("lerchef");

            //        entity.Property(e => e.LId).HasComment("Lehrernummer, in Form der 2-stelligen Lehrerabkürzungen");

            //        entity.Property(e => e.LChef).HasComment("Lehrernummer des dienstrechtlichen (hierarchischen) Vorgesetzten (FS)");

            //        entity.Property(e => e.LEintrittsjahr)
            //            .HasComment("Eintrittsjahr des Lehrers in die Schule");

            //        entity.Property(e => e.LGebdat).HasComment("Geburtsdatum des Lehrers (aus Datenschutzgründen geändert)");

            //        entity.Property(e => e.LGehalt).HasComment("Gehalt des Lehrers (aus Datenschutzgründen geändert)");

            //        entity.Property(e => e.LName).HasComment("Nachname des Lehrers");

            //        entity.Property(e => e.LSprechstunde).HasComment("z. B. MI1 für Mittwoch in der 1. Stunde");

            //        entity.Property(e => e.LVorname).HasComment("Vorname des Lehrers");

            //        entity.HasOne(d => d.LChefNavigation)
            //            .WithMany(p => p.InverseLChefNavigation)
            //            .HasForeignKey(d => d.LChef)
            //            .HasConstraintName("lehrerlehrer");
            //    });

            //    modelBuilder.Entity<Pruefungen>(entity =>
            //    {
            //        entity.HasKey(e => new { e.PDatum, e.PKandidat, e.PPruefer, e.PGegenstand })
            //            .HasName("pk_Pruefungen");

            //        entity.HasIndex(e => e.PGegenstand)
            //            .HasName("gegenstaendepruefungen");

            //        entity.HasIndex(e => e.PKandidat)
            //            .HasName("schuelerpruefungen");

            //        entity.HasIndex(e => e.PPruefer)
            //            .HasName("lehrerpruefungen");

            //        entity.Property(e => e.PDatum).HasComment("Datum der Prüfung");

            //        entity.Property(e => e.PKandidat).HasComment("Schüler, der geprüft wird (FS)");

            //        entity.Property(e => e.PPruefer).HasComment("Lehrer, der die Prüfung abhält (FS)");

            //        entity.Property(e => e.PGegenstand).HasComment("Gegenstand, für den die Prüfung gilt (FS)");

            //        entity.Property(e => e.PArt).HasComment("Art der Prüfung");

            //        entity.Property(e => e.PNote).HasComment("welche Note war`s denn");

            //        entity.HasOne(d => d.PGegenstandNavigation)
            //            .WithMany(p => p.Pruefungens)
            //            .HasForeignKey(d => d.PGegenstand)
            //            .OnDelete(DeleteBehavior.ClientSetNull)
            //            .HasConstraintName("gegenstaendepruefungen");

            //        entity.HasOne(d => d.PKandidatNavigation)
            //            .WithMany(p => p.Pruefungens)
            //            .HasForeignKey(d => d.PKandidat)
            //            .OnDelete(DeleteBehavior.ClientSetNull)
            //            .HasConstraintName("schuelerpruefungen");

            //        entity.HasOne(d => d.PPrueferNavigation)
            //            .WithMany(p => p.Pruefungens)
            //            .HasForeignKey(d => d.PPruefer)
            //            .OnDelete(DeleteBehavior.ClientSetNull)
            //            .HasConstraintName("lehrerpruefungen");
            //    });

            //    modelBuilder.Entity<Raeume>(entity =>
            //    {
            //        entity.HasKey(e => e.RId)
            //            .HasName("pk_Raeume");

            //        entity.Property(e => e.RId).HasComment("Nummer (mit Buchstaben), wie sie außen am Lehrsaaleingang steht");
            //    });

            //    modelBuilder.Entity<Religionen>(entity =>
            //    {
            //        entity.HasKey(e => e.RelId)
            //            .HasName("pk_Religionen");

            //        entity.HasIndex(e => e.RelNr)
            //            .HasName("idx_Rel_Nr")
            //            .IsUnique();

            //        entity.Property(e => e.RelId).ValueGeneratedNever();
            //    });

            //    modelBuilder.Entity<Schueler>(entity =>
            //    {
            //        entity.HasKey(e => e.SNr)
            //            .HasName("pk_Schueler");

            //        entity.HasIndex(e => e.SGeschlecht)
            //            .HasName("Geschlechterschueler");

            //        entity.HasIndex(e => e.SHausnummer)
            //            .HasName("idx_S_Hausnummer");

            //        entity.HasIndex(e => e.SKlasse)
            //            .HasName("schklasse");

            //        entity.HasIndex(e => e.SReligion)
            //            .HasName("Religionenschueler");

            //        entity.HasIndex(e => e.SStaatsb)
            //            .HasName("Staatenschueler");

            //        entity.Property(e => e.SNr)
            //            .HasComment("Schülernummer, als beliebige (nicht klassifizierende) Nummer")
            //            .ValueGeneratedNever();

            //        entity.Property(e => e.SAdresse).HasComment("eine kurze Anschrift des Schülers");

            //        entity.Property(e => e.SGebdatum).HasComment("Geburtsdatum des Schülers");

            //        entity.Property(e => e.SGeschlecht).HasComment("Geschlecht: Männlich oder Weiblich");

            //        entity.Property(e => e.SKlasse).HasComment("Klasse, die der Schüler zur Zeit besucht (FS)");

            //        entity.Property(e => e.SVorname).HasComment("Vorname des Schülers");

            //        entity.Property(e => e.SZuname).HasComment("Nachname des Schülers");

            //        entity.HasOne(d => d.SGeschlechtNavigation)
            //            .WithMany(p => p.Schuelers)
            //            .HasForeignKey(d => d.SGeschlecht)
            //            .OnDelete(DeleteBehavior.ClientSetNull)
            //            .HasConstraintName("Geschlechterschueler");

            //        entity.HasOne(d => d.SKlasseNavigation)
            //            .WithMany(p => p.Schuelers)
            //            .HasForeignKey(d => d.SKlasse)
            //            .OnDelete(DeleteBehavior.ClientSetNull)
            //            .HasConstraintName("klassenschueler");

            //        entity.HasOne(d => d.SReligionNavigation)
            //            .WithMany(p => p.Schuelers)
            //            .HasForeignKey(d => d.SReligion)
            //            .HasConstraintName("Religionenschueler");

            //        entity.HasOne(d => d.SStaatsbNavigation)
            //            .WithMany(p => p.Schuelers)
            //            .HasForeignKey(d => d.SStaatsb)
            //            .HasConstraintName("Staatenschueler");
            //    });

            //    modelBuilder.Entity<Schuljahre>(entity =>
            //    {
            //        entity.HasKey(e => e.SjaNr)
            //            .HasName("pk_Schuljahre");

            //        entity.Property(e => e.SjaNr).ValueGeneratedNever();
            //    });

            //    modelBuilder.Entity<Staaten>(entity =>
            //    {
            //        entity.HasKey(e => e.StaNr)
            //            .HasName("pk_Staaten");
            //    });

            //    modelBuilder.Entity<Stunden>(entity =>
            //    {
            //        entity.HasKey(e => new { e.StStunde, e.StLehrer })
            //            .HasName("pk_Stunden");

            //        entity.HasIndex(e => e.StGegenstand)
            //            .HasName("untgegnr");

            //        entity.HasIndex(e => e.StKlasse)
            //            .HasName("klassenstunden");

            //        entity.HasIndex(e => e.StLehrer)
            //            .HasName("untlernr");

            //        entity.HasIndex(e => e.StRaum)
            //            .HasName("untlsaalnr");

            //        entity.Property(e => e.StStunde).HasComment("Wochenstunde, für die der Eintrag gilt (z.B.   mo1, mo2, mo3, ...  mi9, mi10, ...  sa5)");

            //        entity.Property(e => e.StLehrer).HasComment("Lehrer, der in dieser Stunde unterrichten soll (FS)");

            //        entity.Property(e => e.StGegenstand).HasComment("Gegenstand, der in dieser Stunde gehalten wird (FS)");

            //        entity.Property(e => e.StKlasse).HasComment("Klasse für die der Stundenplaneintrag gilt (FS)");

            //        entity.Property(e => e.StRaum).HasComment("Lehrsaal, der verwendet wird (FS)");

            //        entity.HasOne(d => d.StGegenstandNavigation)
            //            .WithMany(p => p.Stundens)
            //            .HasForeignKey(d => d.StGegenstand)
            //            .OnDelete(DeleteBehavior.ClientSetNull)
            //            .HasConstraintName("gegenstaendestunden");

            //        entity.HasOne(d => d.StKlasseNavigation)
            //            .WithMany(p => p.Stundens)
            //            .HasForeignKey(d => d.StKlasse)
            //            .OnDelete(DeleteBehavior.ClientSetNull)
            //            .HasConstraintName("klassenstunden");

            //        entity.HasOne(d => d.StLehrerNavigation)
            //            .WithMany(p => p.Stundens)
            //            .HasForeignKey(d => d.StLehrer)
            //            .OnDelete(DeleteBehavior.ClientSetNull)
            //            .HasConstraintName("lehrerstunden");

            //        entity.HasOne(d => d.StRaumNavigation)
            //            .WithMany(p => p.Stundens)
            //            .HasForeignKey(d => d.StRaum)
            //            .HasConstraintName("raeumestunden");
            //    });

            //    OnModelCreatingPartial(modelBuilder);
            //
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}